from flask import Flask,Blueprint,request,jsonify,render_template
from flask_sqlalchemy import SQLAlchemy
import pymysql
import hashlib
import random
import datetime
import redis
import time
from re import search

from flask_cors import *
from flask import Flask
from flask_mail import Mail, Message
# 导入time模块
import time
import requests
import json
from flask_apscheduler import APScheduler
from apscheduler.schedulers.background import BackgroundScheduler
aps = APScheduler(scheduler=BackgroundScheduler(timezone='Asia/Shanghai'))
'''
调用北京贝叶斯科技AI舌诊接口成功示例。
详细使用教程请访问网址：http://www.bayescience.com/bes-project/login.html
'''

def Md5(res):
    print(res)
    md = hashlib.md5()  # 构造一个md5
    md.update(res.encode(encoding='utf-8'))
    # 加密
    print(md.hexdigest().upper())
    return md.hexdigest().upper()

def generate_random_str(randomlength=16):
  """
  生成一个指定长度的随机字符串
  """
  random_str =''
  base_str ='ABCDEFGHIGKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789'
  length =len(base_str) -1
  for i in range(randomlength):
    random_str +=base_str[random.randint(0, length)]
  return random_str
 
app=Flask(__name__)
app.config['JSON_AS_ASCII'] = False
CORS(app,origins="*",supports_credentials=True)
pool = redis.ConnectionPool(host='127.0.0.1', port=6379, decode_responses=True)


'''
#创建蓝图对象
user_bp=Blueprint('uesr',__name__)

@user_bp.route('/profile/<int:nums>')
def get_profile(nums):
    return '数字是{}'.format(nums)

#data 对应body中原始的数据
#form 对应表单中的数据
#........
'''


from flask import Flask,Blueprint,request,jsonify,render_template
from flask_sqlalchemy import SQLAlchemy
import pymysql
from flask_mail import Mail, Message
import random
import datetime
import hashlib


def Md5(res):
    print(res)
    md = hashlib.md5()  # 构造一个md5
    md.update(res.encode(encoding='utf-8'))
    # 加密
    print(md.hexdigest().upper())
    return md.hexdigest().upper()

app=Flask(__name__)
app.config['JSON_AS_ASCII'] = False

app.config['MAIL_SERVER'] = 'smtp.163.com'
app.config['MAIL_PORT'] = 465
app.config['MAIL_USERNAME'] = 'yihang_xu2022@163.com'
app.config['MAIL_PASSWORD'] = 'FBDHKJGYAUZJDVTD'
app.config['MAIL_USE_TLS'] = False
app.config['MAIL_USE_SSL'] = True
mail = Mail(app)

@app.route("/")
def a():
    return "hey"
#用户忘记密码,发送密码
@app.route("/sentpin")
def send():
    id = request.args.get('id')
    x=random.randint(0,999999)
    x=str(x).zfill(6)
#x保存验证码，验证码保存到数据库中加密
    str1=Md5(x)
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
#首先判断输入id是否正确
    sql0="select * from user where id='"+id+"'"
    print(sql0)
    cur.execute(sql0)
    u=cur.fetchall()
    if len(u)==0:
        return "error"
    sql="update user set pid='"+str1+"' where id='"+id+"'"
    print(sql)
    cur.execute(sql)
    cur.fetchall()
    sql1 = "SELECT pid FROM user where id='" + "{}".format(id) + "'"
    print(sql1)
    cur.execute(sql1)
    cur.fetchall()
#将验证码发送的时间保存到数据库中
    i=datetime.datetime.now()
    sql3="update user set time='"+str(i)+"' where id='"+id+"'"
    print(sql3)
    cur.execute(sql3)
    cur.fetchall()
#发送的内容
    sql2="select mail from teacher where id='"+id+"'"
    print(sql2)
    cur.execute(sql2)
    u = cur.fetchall()
    msg = Message('【合肥工业大学工资管理系统】', sender='yihang_xu2022@163.com', recipients=[u[0][0]])
    msg.body = "老师您好，欢迎使用合肥工业大学工资管理系统，验证码："+x+"(五分钟有效) ，如非本人操作，请检查账号安全。"
    print(msg)
    mail.send(msg)
    conn.commit()
    conn.close()
    result ={}
    result["msg"] = "right"
    return jsonify(result)


# @app.before_request
# def check():
#     print("-------------------------------",request.path)
#     matchObj = search( r'.(jpg|png|jpeg|bmp|txt)$', request.path)
#     subpath = request.path.split('/')
#     paths = ['/sentpin','/enter','/forget']
#     index = request.path.find('?')
#     if index==-1:
#         url = request.path
#     else:
#         url = request.path[:index]
#     print("-------------------------------",url)
#     if url in paths:
#         return None
#     elif len(subpath) >1 and subpath[-2] == 'static' and matchObj:
#         return None
#     else:
#         r = redis.Redis(connection_pool=pool)
#         token = request.headers['Token']
#         result = r.get(token)
#         r.setex(token, 600,result)
#         if result != none:
#             return None
#         else:
#             return jsonify({})


@app.route('/articles')
def get_articles():
    num1=int(request.args.get('num1'))
    num2 = int(request.args.get('num2'))
    return '和为{}'.format(num1+num2)

@app.route('/demo1')
def demo1():
    num1 = request.args.get('num1')
    num2 = request.args.get('num2')
    #print(num1)
    json_dict={
        "num1":num1,
        "num2":num2
    }
    return jsonify(json_dict)
@app.route('/subList')
def subList():
    json_dict=[
        {
            "title": '感冒用药',
            "color": '#4EF1B6',
            "imgurl": "http://api.hzxwhzxw.asia/static/cough.svg"
        },
        {
            "title": '医疗器械',
            "color": '#4EF1B6',
            "imgurl": "http://api.hzxwhzxw.asia/static/apparatus.svg"
        },
        {
            "title": '儿科用药',
            "color": '#F85E49',
            "imgurl": "http://api.hzxwhzxw.asia/static/paediatrics.svg"
        },
        {
            "title": '更多分类',
            "color": '#FF9A33',
            "imgurl": "http://api.hzxwhzxw.asia/static/more.svg"
        }
    ]
    return jsonify(json_dict)
@app.route('/categoryList')
def categoryList():
    json_dict=[
        {
			"name":'鼻塞',
			'img': 'http://api.hzxwhzxw.asia/static/鼻子.png'
		},
		{
			'name': '咳嗽',
			'img': 'http://api.hzxwhzxw.asia/static/肺部.png'
		},
		{
			'name': '胃病',
			'img': 'http://api.hzxwhzxw.asia/static/胃.png'
		},
		{
			'name': '牙痛',
			'img': 'http://api.hzxwhzxw.asia/static/牙齿.png'
		},
		{
			'name': '腹痛',
			'img': 'http://api.hzxwhzxw.asia/static/腹部.png'
		},
		{
			'name': '骨痛',
			'img': 'http://api.hzxwhzxw.asia/static/骨科.png'
		},
		{
			'name': '儿童',
			'img': 'http://api.hzxwhzxw.asia/static/孩子.png'
		},
		{
			'name': '外伤',
		    'img': 'http://api.hzxwhzxw.asia/static/创口贴.png'
		}
		]
    return jsonify(json_dict)

@app.route('/mainList')
def mainList():
    json_dict=[
        {
        "title": '附近门店',
        "color": '#4EF1B6',
        "imgurl": "http://api.hzxwhzxw.asia/static/shop.svg"
        },
        {
            "title": '领券中心',
            "color": '#F9614D',
            "imgurl": "http://api.hzxwhzxw.asia/static/coupon.svg"
        },
        {
            "title": '防疫用品',
            "color": '#4BB8F9',
            "imgurl": "http://api.hzxwhzxw.asia/static/virus.svg"
        },
        {
            "title": '活动中心',
            "color": '#FF9A33',
            "imgurl": "http://api.hzxwhzxw.asia/static/gifts.svg"
        }
    ]
    return jsonify(json_dict)
'''
#注册蓝图
app.register_blueprint(user_bp)
'''
@app.route('/avv')
def avv():
    conn = pymysql.connect(host='118.178.241.96', user='patients', password='LiwZ5eHyksRtpDJf', db='patients')
    cur = conn.cursor()
    sql3 = "DROP VIEW b"
    cur.execute(sql3)
    conn.close()
    return "delete"


@app.route('/disease/<keyword>')
def add(keyword):
    keyword = keyword[keyword.index("=") + 1:]
    print(keyword)
    conn=pymysql.connect(host='118.178.241.96',user='patients',password='LiwZ5eHyksRtpDJf',db='patients')
    cur=conn.cursor()
    sql1='''CREATE VIEW b AS SELECT med1,COUNT(med1) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP BY med1 UNION SELECT med2,COUNT(med2) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP BY med2 UNION SELECT med3,COUNT(med3) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP BY med3 UNION SELECT med4,COUNT(med4) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP 
    BY med4 UNION SELECT med5,COUNT(med5) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP BY med5 UNION SELECT med6,COUNT(med6) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP BY med6 UNION SELECT med7,COUNT(med7) AS num FROM human WHERE(HumanSign IN '''+keyword +''') GROUP BY med7'''
    print(sql1)
    cur.execute(sql1)
    sql2 = "SELECT med1 FROM b ORDER BY num DESC LIMIT 5"
    cur.execute(sql2)
    u=cur.fetchall()
    sql3 = "DROP VIEW b"
    cur.execute(sql3)
    a = []
    for i in range(5):
        sql4 = "SELECT element FROM med WHERE med='" + "{}".format(u[i][0]) + "'"
        print(sql4)
        cur.execute(sql4)
        v=cur.fetchall()
        a.append(v)
        print(v)
    conn.close()
    json_dict = {
        "values":u,
        "neirong":a
    }
    return jsonify(json_dict)
    
@app.route('/')
def index():
    return "Welcome to my design made by xyh"

@app.route('/searchmed/<keyword>')
def searchmed(keyword):
    conn = pymysql.connect(host='118.178.241.96', user='patients', password='LiwZ5eHyksRtpDJf', db='patients')
    cur = conn.cursor()
    keyword = keyword[ keyword.index("=")+1:]
    print(keyword)
    sql="SELECT element FROM med WHERE med='"+"{}".format(keyword) + "'"
    sql2="UPDATE med SET sum=sum+1 WHERE med=\""+"{}".format(keyword) + "\""
    print(sql2)
    cur.execute(sql)
    u1 = cur.fetchall()
    cur.execute(sql2)
    conn.commit()
    conn.close()
    json_dict = {
        "values": u1[0]
    }
    return jsonify(json_dict)

@app.route('/paixv')
def paixv():
    conn = pymysql.connect(host='118.178.241.96', user='patients', password='LiwZ5eHyksRtpDJf', db='patients')
    cur = conn.cursor()
    sql = "SELECT med FROM med ORDER BY sum DESC LIMIT 8"
    cur.execute(sql)
    u = cur.fetchall()

    conn.close()
    json_dict = {
        "values1": u[0]
    }
    return jsonify(json_dict)



# app.config['MAIL_SERVER'] = 'smtp.163.com'
# app.config['MAIL_PORT'] = 465
# app.config['MAIL_id'] ='yihang_xu2022@163.com'
# app.config['MAIL_PASSWORD'] ='FBDHKJGYAUZJDVTD'
# app.config['MAIL_USE_TLS'] = False
# app.config['MAIL_USE_SSL'] = True
# mail = Mail(app)

# #用户忘记密码,发送密码
# @app.route("/sentpin")
# def send():
#     id = request.args.get('id')
#     x=random.randint(0,999999)
#     x=str(x).zfill(6)
# #x保存验证码，验证码保存到数据库中加密
#     str1=Md5(x)
#     conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
#     cur = conn.cursor()
# #首先判断输入id是否正确
#     sql0="select * from user where id='"+id+"'"
#     print(sql0)
#     cur.execute(sql0)
#     u=cur.fetchall()
#     if len(u)==0:
#         return "error"
#     sql="update user set pid='"+str1+"' where id='"+id+"'"
#     print(sql)
#     cur.execute(sql)
#     cur.fetchall()
#     sql1 = "SELECT pid FROM user where id='" + "{}".format(id) + "'"
#     print(sql1)
#     cur.execute(sql1)
#     cur.fetchall()
# #将验证码发送的时间保存到数据库中
#     i=datetime.datetime.now()
#     sql3="update user set time='"+str(i)+"' where id='"+id+"'"
#     print(sql3)
#     cur.execute(sql3)
#     cur.fetchall()
# #发送的内容
#     sql2="select mail from teacher where id='"+id+"'"
#     print(sql2)
#     cur.execute(sql2)
#     u = cur.fetchall()
#     msg = Message('【合肥工业大学工资管理系统】', sender='yihang_xu2022@163.com', recipients=[u[0][0]])
#     msg.body = "老师您好，欢迎使用合肥工业大学工资管理系统，验证码："+x+"(五分钟有效) ，如非本人操作，请检查账号安全。"
#     print(msg)
#     mail.send(msg)
#     conn.commit()
#     conn.close()
#     result ={}
#     result["msg"] = "right"
#     return jsonify(result)
    
    

#确认验证码
@app.route('/queren')
def queren():
    id = request.args.get('id')
    pid = request.args.get('pid')
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    str1=Md5(pid)
    sql="select pid,time from user where id='"+id+"'"
    cur.execute(sql)
    u = cur.fetchall()
    i1 = u[0][1]
    a=u[0][0]
    conn.commit()
    conn.close()
    #比较两次验证码的时间，相差5分钟之内有效
    print(i1)
    i2=datetime.datetime.now()
    last=i2-i1
    print(i2)
    last=last.seconds
    if last>30000:
        print(last)
        return "验证码已经过期"
    result ={}
    if str1==a:
        result["msg"]= "right"
        return jsonify(result)
    else:
        result["msg"]= "error"
        return jsonify(result)

@app.route("/xiugaimima")
def xiugaimima():
    id = request.args.get('id')
    password1 = request.args.get('password1')
    password2 = request.args.get('password2')
    if password1!=password2:
        return "两次密码输入不一致"
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    str1=Md5(password1)
    sql = "update user set password='"+str1+"' where id='"+id+"'"
    print(sql)
    cur.execute(sql)
    cur.fetchall()
    conn.commit()
    conn.close()
    result ={}
    result["msg"]= "right"
    return jsonify(result)


@app.route('/beijing')
def beijing():
     return "http://xyh.hzxwhzxw.asia/static/beijing.jpg"
    

#三个参数，排序的标准；页数；页数的数据；
@app.route('/selectteacher')
def selectteacher():
    limit=int(request.args.get('limit'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql="select * from teacher limit 100"
    cur.execute(sql)
    u=cur.fetchall()
    print(u)
    conn.close()
    keys = ['gonghao','xingming','dianhua','nianling','xingbie','zhicheng','xueyuan']
    u = [ dict(zip(keys,item)) for item in u ]
    result = {}
    result['msg'] = 'right'
    result['data'] = {}
    result['data']['list'] = u
    result['data']['total'] = len(u)/limit
    print(u)
    print(result)
    return result
    
@app.route('/selectlimitteacher')
def selectlimitteacher():
    id=(request.args.get('gonghao'))
    limit=int(request.args.get('limit'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql="select * from teacher where id like'"+"{}".format(id)+"%' limit 100"
    print(sql)
    cur.execute(sql)
    u=cur.fetchall()
    conn.close()
    keys = ['gonghao','xingming','dianhua','nianling','xingbie','zhicheng','xueyuan']
    u = [ dict(zip(keys,item)) for item in u ]
    result = {}
    result['msg'] = 'right'
    result['data'] = {}
    result['data']['list'] = u
    result['data']['total'] = len(u)/limit
    print(u)
    return result

@app.route('/selectwork')
def selectwork():
    id = (request.args.get('id'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql = " SELECT * FROM `work` WHERE id='" + "{}".format(id) + "'"
    print(sql)
    cur.execute(sql)
    result = {}
    result['msg'] = 'right'
    u = cur.fetchall()
    conn.close()
    if len(u)==0:
        result['msg'] = 'right'
        result['gonghao']=id
        result['overtime']="0"
        result['miss'] = "0"
        result['missfix']="0"
        result['overtimefix']="0"
        print(result)
        return result
        
    result['msg'] = 'right'
    result['gonghao']=u[0][0]
    result['overtime']=u[0][1]
    result['miss'] = u[0][2]
    result['missfix']="0"
    result['overtimefix']="0"
    print(result)
    return result
    
@app.route('/insertwork')
def insertwork():
    id=(request.args.get('id'))
    add=int(request.args.get('overtimefix'))
    decrease=int(request.args.get('missfix'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    sql0="select * from work where id='"+"{}".format(id)+"'"
    cur.execute(sql0)
    u=cur.fetchall()
    if len(u)==0:
        sql="insert into work VALUES ('"+"{}".format(id)+"','"+"{}".format(add)+"','"+"{}".format(decrease)+"')"
        print(sql)
        cur.execute(sql)
        u=cur.fetchall()
        conn.commit()
        conn.close()
        result={}
        result['msg']='right'
        return result
    sql2="update work set overtime='"+"{}".format(add)+"',absence='"+"{}".format(decrease)+"'where id='"+"{}".format(id)+"'"
    print(sql2)
    cur.execute(sql2)
    u=cur.fetchall()
    conn.commit()
    conn.close()
    result={}
    result['msg']='right'
    return result
#******************************************************************************************************************    
#用户select
@app.route('/updateperson')
def updateperson():
    id=(request.args.get('id'))
    name=(request.args.get('name'))
    sex=(request.args.get('sex'))
    age=(request.args.get('age'))
    mail=(request.args.get('email'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    if (sex!='男'and sex!='女'):
        result['msg']='error'
        print(1)
        return result
    sql="update teacher set name='"+"{}".format(name)+"',mail='"+"{}".format(mail)+"',age='"+"{}".format(age)+"',sex='"+"{}".format(sex)+"'where id='"+"{}".format(id)+"'"
    print(sql)
    cur.execute(sql)
    cur.fetchall()
    conn.commit()
    conn.close()
    result={}
    result['msg']='right'
    return result

@app.route('/selectoneperson')
def selectoneperson():
    id=(request.args.get('id'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    sql="select id,name,mail,age,sex from teacher where id='"+"{}".format(id)+"'"
    print(sql)
    cur.execute(sql)
    u=cur.fetchall()
    conn.commit()
    conn.close()
    result['msg'] = 'right'
    result['name'] =u[0][1] 
    result['email'] = u[0][2]
    result['sex']=u[0][4]
    result['age']=u[0][3]
    return result
    

@app.route('/selectonemoney')
def selectonemoney():
    id=(request.args.get('id'))
    limit=int(request.args.get('limit'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    sql="select * from final_money where id='"+"{}".format(id)+"'"
    cur.execute(sql)
    u=cur.fetchall()
    conn.commit()
    conn.close()
    result['msg']="right"
    keys = ['gonghao','jibengongzi','jiabangongzi','koufei','shifagongzi']
    u = [ dict(zip(keys,item)) for item in u ]
    result['data'] = {}
    result['data']['list'] = u
    result['data']['total'] = len(u)/limit
    print(result)
    return result
    
    
    
#********************************************************************************************************* 
#管理系统select

    
    

@app.route('/updateteacher')
def updateteacher():
    id=(request.args.get('id'))
    name=(request.args.get('name'))
    sex=(request.args.get('sex'))
    depart=(request.args.get('depart'))
    age=(request.args.get('age'))
    mail=(request.args.get('email'))
    title=(request.args.get('title'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    if (sex!='男'and sex!='女'):
        result['msg']='error'
        print(1)
        return result
    a=['1','2','3','4','5']
    if depart not in a:
        result['msg']='error'
        print(2)
        return result
    b=['初级','中级','副高级','正高级']
    if title not in b:
        result['msg']='error'
        print(3)
        return result
    sql0="select * from id='"+"{}".format(id)+"'"
    cur.execute(sql0)
    u=cur.fetchall()
    if len(u)==0:
        result['msg']='error'
        return result
    sql="update teacher set name='"+"{}".format(name)+"',mail='"+"{}".format(mail)+"',age='"+"{}".format(age)+"',sex='"+"{}".format(sex)+"',title='"+"{}".format(title)+"',department_id='"+"{}".format(depart)+"'"+"where id='"+"{}".format(id)+"'"
    print(sql)
    cur.execute(sql)
    cur.fetchall()
    conn.commit()
    conn.close()
    result={}
    result['msg']='right'
    return result

@app.route('/addteacher')
def addteacher():
    print("*****************************\n")
    print("*****************************\n")
    print("*****************************\n")
    print("*****************************\n")
    print("*****************************\n")
    id=(request.args.get('id'))
    name=(request.args.get('name'))
    sex=(request.args.get('sex'))
    depart=(request.args.get('depart'))
    age=(request.args.get('age'))
    mail=(request.args.get('email'))
    title=(request.args.get('title'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    if (sex!='男'and sex!='女'):
        result['msg']='error'
        print(1)
        return result
    a=['1','2','3','4','5']
    if depart not in a:
        result['msg']='error'
        print(2)
        return result
    b=['初级','中级','副高级','正高级']
    if title not in b:
        result['msg']='error'
        print(3)
        return result
    sql0="select * from teacher where id='"+"{}".format(id)+"'"
    print(sql0)
    cur.execute(sql0)
    u=cur.fetchall()
    if len(u)!=0:
        print(4)
        result['msg']='error'
        return result
    sql="insert into teacher set name='"+"{}".format(name)+"',mail='"+"{}".format(mail)+"',age='"+"{}".format(age)+"',sex='"+"{}".format(sex)+"',title='"+"{}".format(title)+"',department_id='"+"{}".format(depart)+"',id='"+"{}".format(id)+"'"
    print(sql)
    cur.execute(sql)
    cur.fetchall()
    conn.commit()
    conn.close()
    result['msg']='right'
    return result
    
@app.route('/currentmonth')
def currentmonth():
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    result={}
    sql="call all_pay()"
    cur.execute(sql)
    u=cur.fetchall()
    conn.commit()
    conn.close()
    print(u)
    result['base']=u[0][0]
    result['add']=u[0][1]
    result['decrease']=u[0][2]
    result['total']=u[0][3]
    result['msg']='right'
    return result
    

    
@app.route('/lastmoney')
def lastmoney():
    year=(request.args.get('year'))
    month=(request.args.get('month'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    a=year+"-"+month
    sql="select * from last_money where date='"+"{}".format(a)+"'"
    print(sql)
    result={}
    cur.execute(sql)
    u=cur.fetchall()
    conn.commit()
    conn.close()
    if len(u)==0:
        result['msg']='error'
        return "error"
    result['base']=u[0][1]
    result['add']=u[0][2]
    result['decrease']=u[0][3]
    result['total']=u[0][4]
    result['msg']='right'
    print(result)
    return result
    
    
    
    
    
    
    
@app.route('/deleteteacher')  
def deleteteacher():
    print("*****************************\n")
    print("*****************************\n")
    print("*****************************\n")
    print("*****************************\n")
    print("*****************************\n")
    
    id=(request.args.get('ids'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql="delete from teacher where id='"+"{}".format(id)+"'"
    print(sql)
    cur.execute(sql)
    cur.fetchall()
    conn.commit()
    conn.close()
    result={}
    result['msg']='right'
    return result

@app.route('/gongzixinxi/info')  
def detectmoney():
    id=(request.args.get('id'))
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql="SELECT * from final_money where id='"+"{}".format(id)+"'"
    cur.execute(sql)
    u=cur.fetchall()
    conn.commit()
    conn.close()
    result={}
    result['data'] = {}
    result['msg']='right'
    result['data']['gonghao']=u[0][0]
    result['data']['jibengongzi']=u[0][1]
    result['data']['jiabangongzi']=u[0][2]
    result['data']['fuli']=u[0][3]
    result['data']['shifagongzi']=u[0][4]
    return result
    
    
    
    



#@app.route('/question_answer/<keyword>')
#登入
@app.route('/enter')
def enter():
    id=(request.args.get('username'))
    result={}
    password=(request.args.get('password'))
    flag=(request.args.get('flag'))
    if flag=="1":
        conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
        cur = conn.cursor()
        sql = "SELECT password FROM user2 where id='"+"{}".format(id)+"'"
        cur.execute(sql)
        result={}
        u = cur.fetchall()
        if len(u)==0:
            result["msg"] = "error2"
            return result
        if u[0][0]!=Md5(password):
            result["msg"] = "error1"
            return result
        result["msg"] = "right"
        return result
    print(id,password)
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql = "SELECT password FROM user where id='"+"{}".format(id)+"'"
    print(sql)
    cur.execute(sql)
    u = cur.fetchall()
    if len(u)==0:
        result["msg"] = "error2"
        return jsonify(result)
    print(u)
    conn.commit()
    conn.close()
    u=u[0][0]
    str1=Md5(password)
    r = redis.Redis(connection_pool=pool)
    token = generate_random_str()
    r.setex(token, 600,id)
    result["token"] = token
    
    if u==str1:
        result["msg"] = "right"
    else:
        result["msg"] = "error1"
    print(result)
    return result
    
@app.route('/updatepassword2')
def updatepassword2():
    id=(request.args.get('id'))
    password=(request.args.get('newpassword'))
    password=Md5(password)
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql = "update user set password='"+"{}".format(password)+"'where id='"+"{}".format(id)+"'"
    cur.execute(sql)
    u = cur.fetchall()
    conn.commit()
    conn.close()
    result={}
    result["msg"] = "right"
    return result
    
    

class Config(object):
    SCHEDULER_API_ENABLED = True
@aps.task('cron', id='do_job_3',month='*/1')
def clear():
    conn = pymysql.connect(host='124.220.156.129', user='teacher', password='rPsmphwcp5cmrtnX', db='teacher')
    cur = conn.cursor()
    sql0 = "call call all_pay()"
    cur.execute(sql0)
    u = cur.fetchall()
    sql = "insert into last_money set data='"+"{}".format(u[0][1])+"'"
    cur.execute(sql)
    cur.fetchall()
    sql = "delete from work"
    cur.execute(sql)
    cur.fetchall()
    conn.commit()
    conn.close()   




if __name__=="__main__":
    app.run(port=5000)
    app = Flask(__name__)
    app.config.from_object(Config())
    aps.init_app(app)
    aps.start()
    


